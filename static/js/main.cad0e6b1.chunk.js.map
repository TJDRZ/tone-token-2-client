{"version":3,"sources":["components/About.js","components/ToneLock.js","utility/dataClasses.js","utility/backendAPIs/APIURL.js","utility/backendAPIs/authAPI.js","utility/backendAPIs/fetchAPI.js","utility/frontendAPIs/creationAPI.js","components/Input.js","utility/frontendAPIs/updateIndexAPI.js","components/Move.js","utility/frontendAPIs/deletionAPI.js","components/Delete.js","utility/frontendAPIs/updateValueAPI.js","components/Card.js","utility/frontendAPIs/nameChangeAPI.js","utility/frontendAPIs/flickerAPI.js","components/SideList.js","components/OpenBody.js","utility/frontendAPIs/startAppFetch.js","components/Menu.js","components/Login.js","App.js","index.js"],"names":["About","props","author","title","about","useRef","slide","ham","bur","ger","className","ref","onClick","current","classList","contains","style","transform","opacity","color","toggle","href","ToneLock","useContext","BoardContext","tonelocked","setTonelocked","document","querySelectorAll","forEach","button","PedalboardClass","this","_id","uniqid","name","index","pedals","type","feType","PedalClass","controls","FlickerClass","value","KnobClass","url","registerUser","email","password","a","fetch","method","headers","body","JSON","stringify","res","json","data","token","localStorage","setItem","window","alert","loginUser","getUser","Authorization","apiGet","getItem","user","apiGetChild","parent","apiCreate","item","apiNameChange","apiUpdateValue","apiUpdateIndex","apiDelete","addNewPedal","activeBoard","setActiveBoard","pedal","tempBoard","length","push","Input","placeholder","pattern","setNameChange","useState","text","setText","textSet","setTextSet","useEffect","onSubmit","htmlFor","required","maxLength","onChange","e","target","directionFinder","direction","currentIndex","result","moveControl","self","openPedal","setOpenPedal","indexOf","destination","tempControls","tempSelf","splice","map","control","tempPedal","Move","pedalboards","setPedalboards","moveIndex","tempBoards","pedalboard","movePedalboard","tempPedals","movePedal","deleteControl","filter","Delete","deletePedalboard","undefined","deletePedal","updateValueAPI","Card","nameChange","tempPedalboards","nameChangeAPI","firstPosition","secondPosition","thirdPosition","setValue","innerWidth","viewport","setViewport","handleResizeWindow","addEventListener","removeEventListener","flickerPosition","diameter","min","max","step","theme","defaultColor","activeColor","gradientStart","gradientEnd","onValueChange","SideList","addNewPedalboard","OpenBody","flicker","addNewFlicker","knob","addNewKnob","fetchPedalboardsFromDB","dbPedalboards","newDBPedalboards","sort","b","fetchPedalsFromDB","dbPedals","newDBPedals","fetchControlsFromDB","dbControls","tempControl","newDBControls","startAppGET","boards","board","createContext","Menu","navigate","useNavigate","Provider","removeItem","Login","newUser","setNewUser","setEmail","setPassword","fetchUserData","submitForm","preventDefault","error","App","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cad0e6b1.chunk.js","sourcesContent":["import \"../styles/About.css\";\nimport { useRef } from \"react\";\n\nfunction About(props) {\n  const { author, title } = props;\n  const about = useRef(null);\n  const slide = useRef(null);\n  const ham = useRef(null);\n  const bur = useRef(null);\n  const ger = useRef(null);\n\n  const info = () => {\n    if (about.current.classList.contains(\"closed\")) {\n      ham.current.style.transform = \"rotate(45deg) translate(22.5%, 100%)\";\n      bur.current.style.opacity = \"0\";\n      ger.current.style.transform = \"rotate(-45deg) translate(22.5%, -100%)\";\n      slide.current.style.transform = \"translateX(100%)\";\n      author.current.style.color = \"#fada5e\";\n      title.current.style.color = \"#fada5e\";\n      about.current.classList.toggle(\"closed\");\n    } else {\n      ham.current.style.transform = \"rotate(0) translate(0)\";\n      bur.current.style.opacity = \"1\";\n      ger.current.style.transform = \"rotate(0) translate(0)\";\n      slide.current.style.transform = \"translateX(-100%)\";\n      author.current.style.color = \"#000\";\n      title.current.style.color = \"#000\";\n      about.current.classList.toggle(\"closed\");\n    }\n  };\n\n  return (\n    <div className=\"About\">\n      <div ref={about} className=\"about closed\" onClick={info}>\n        <div ref={ham}></div>\n        <div ref={bur}></div>\n        <div ref={ger}></div>\n      </div>\n      <div ref={slide} className=\"slide\">\n        <ul>\n          <li>\n            <p>\n              Tired of forgetting where your knobs and switches were set as you\n              change styles of music? How about what pedals you used to achieve\n              that specific sound? ...Tone Token helps solve that problem.\n            </p>\n          </li>\n          <li>\n            <p>Usage:</p>\n            <p>\n              - Create pedalboards, with pedals inside them...and knobs and\n              switches inside those too!\n            </p>\n            <p>- Make Active and Open Pedal will expand pedalboards and pedals, showing their inner components</p>\n            <p>- Click edit to customize the name of anything.</p>\n            <p>- Click on the arrows to move each card</p>\n            <p>- Click on the switch icons to toggle 3 different positions.</p>\n            <p>\n              - Click on the desired location and/or click and drag the knob\n              icons.\n            </p>\n            <p>\n              - Click on the Tone Lock Token at the top of the main menu page to\n              hide all 'Delete' buttons to prevent unhappy accidents.\n            </p>\n          </li>\n          <li>\n            <p>\n              <a className=\"website\" href=\"https://tjdrz.com\">\n                https://tjdrz.com\n              </a>\n            </p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import \"../styles/ToneLock.css\";\nimport { useContext } from \"react\";\nimport { BoardContext } from \"./Menu\";\n\nfunction ToneLock() {\n  const { tonelocked, setTonelocked } = useContext(BoardContext);\n\n  const hideDelete = () => {\n    const buttons = document.querySelectorAll(\".delete\");\n    buttons.forEach((button) => {\n      button.classList.toggle(\"hide-delete\");\n    });\n    tonelocked ? setTonelocked(false) : setTonelocked(true);\n  };\n\n  return (\n    <div className=\"ToneLock\">\n      <div className=\"outer-lock\" onClick={hideDelete}>\n        <div className=\"inner-lock\"></div>\n      </div>\n      <p>Tone Lock</p>\n    </div>\n  );\n}\n\nexport default ToneLock;\n","import uniqid from \"uniqid\";\n\nclass PedalboardClass {\n  constructor() {\n    this._id = uniqid();\n    this.name = \"New Pedalboard\";\n    this.index = null;\n    this.pedals = [];\n    this.type = \"pedalboard\";\n    this.feType = \"pedalboard\";\n  }\n}\n\nclass PedalClass {\n  constructor() {\n    this._id = uniqid();\n    this.name = \"New Pedal\";\n    this.index = null;\n    this.controls = [];\n    this.type = \"pedal\";\n    this.feType = \"pedal\";\n  }\n}\n\nclass FlickerClass {\n  constructor() {\n    this._id = uniqid();\n    this.name = \"New Switch\";\n    this.index = null;\n    this.value = 1;\n    this.type = \"control\";\n    this.feType = \"flicker\";\n  }\n}\n\nclass KnobClass {\n  constructor() {\n    this._id = uniqid();\n    this.name = \"New Knob\";\n    this.index = null;\n    this.value = 0;\n    this.type = \"control\";\n    this.feType = \"knob\";\n  }\n}\nexport { PedalboardClass, PedalClass, FlickerClass, KnobClass };\n","const url = \"https://tone-token-2-api-production.up.railway.app\";\n\nexport default url","import url from \"./APIURL\";\n\nconst registerUser = async (email, password) => {\n  try {\n    const res = await fetch(`${url}/api/user`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await res.json();\n    if (data.token) {\n      localStorage.setItem(\"tone-token-user\", data.token);\n    }\n    return data;\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst loginUser = async (email, password) => {\n  try {\n    const res = await fetch(`${url}/api/user/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await res.json();\n    if (data.token) {\n      localStorage.setItem(\"tone-token-user\", data.token);\n    }\n    return data;\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst getUser = async (token) => {\n  try {\n    const res = await fetch(`${url}/api/user/current`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nexport { registerUser, loginUser, getUser };\n","import { getUser } from \"./authAPI\";\nimport url from \"./APIURL\";\n\nconst apiGet = async (type) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    const res = await fetch(`${url}/api/${type}/${user._id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst apiGetChild = async (type, parent) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    const res = await fetch(`${url}/api/${type}/${parent}/${user._id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst apiCreate = async (item, parent) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    await fetch(`${url}/api/${item.type}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ item, parent, user }),\n    });\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst apiNameChange = async (item) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    await fetch(`${url}/api/${item.type}/nameChange`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ item, user }),\n    });\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst apiUpdateValue = async (item) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    await fetch(`${url}/api/${item.type}/updateValue`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ item, user }),\n    });\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst apiUpdateIndex = async (item) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    await fetch(`${url}/api/${item.type}/updateIndex`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ item, user }),\n    });\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nconst apiDelete = async (item) => {\n  try {\n    const token = localStorage.getItem(\"tone-token-user\");\n    const user = await getUser(token);\n    await fetch(`${url}/api/${item.type}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ item, user }),\n    });\n  } catch (err) {\n    window.alert(err);\n    return;\n  }\n};\n\nexport {\n  apiGet,\n  apiGetChild,\n  apiCreate,\n  apiNameChange,\n  apiUpdateValue,\n  apiUpdateIndex,\n  apiDelete,\n};\n","import {\n  PedalboardClass,\n  PedalClass,\n  FlickerClass,\n  KnobClass,\n} from \"../dataClasses\";\nimport { apiCreate } from \"../backendAPIs/fetchAPI\";\n\nconst addNewPedalboard = (pedalboards, setPedalboards, setActiveBoard) => {\n  const pedalboard = new PedalboardClass();\n  pedalboard.index = pedalboards.length;\n  setActiveBoard(pedalboard);\n  setPedalboards([...pedalboards, pedalboard]);\n  apiCreate(pedalboard);\n};\n\nconst addNewPedal = (activeBoard, setActiveBoard) => {\n  const pedal = new PedalClass();\n  const tempBoard = activeBoard;\n  pedal.index = tempBoard.pedals.length;\n  tempBoard.pedals.push(pedal);\n  setActiveBoard({ ...tempBoard }); // spread into new obj to force re-render\n  apiCreate(pedal, activeBoard);\n};\n\nconst addNewFlicker = (openPedal, setOpenPedal) => {\n  const flicker = new FlickerClass();\n  const tempPedal = openPedal;\n  flicker.index = tempPedal.controls.length;\n  tempPedal.controls.push(flicker);\n  setOpenPedal({ ...tempPedal }); // spread into new obj to force re-render\n  apiCreate(flicker, openPedal);\n};\n\nconst addNewKnob = (openPedal, setOpenPedal) => {\n  const knob = new KnobClass();\n  const tempPedal = openPedal;\n  knob.index = tempPedal.controls.length;\n  tempPedal.controls.push(knob);\n  setOpenPedal({ ...tempPedal }); // spread into new obj to force re-render\n  apiCreate(knob, openPedal);\n};\n\nexport { addNewPedalboard, addNewPedal, addNewFlicker, addNewKnob };\n","import \"../styles/Input.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Input(props) {\n  const { type, name, placeholder, pattern, setNameChange, item } = props;\n\n  const [text, setText] = useState(\"\");\n  const [textSet, setTextSet] = useState(false);\n\n  useEffect(() => {\n    setText(item.name);\n    setTextSet(true);\n  }, [item.name]);\n\n  const update = (e) => {\n    setText(e.target.value);\n  };\n\n  const submit = () => {\n    setTextSet(true);\n    setNameChange([text, item._id]); // Lifts text state up after submit\n  };\n\n  const edit = () => {\n    setTextSet(false);\n  };\n\n  return (\n    <div className=\"Input\">\n      {textSet ? (\n        <div>\n          <span>{text} </span>\n          <button onClick={edit}>Edit Name</button>\n        </div>\n      ) : (\n        <form onSubmit={submit}>\n          <label htmlFor={name}>{name}: </label>\n          <input\n            type={type}\n            name={name}\n            required\n            maxLength=\"10\"\n            placeholder={placeholder}\n            pattern={pattern}\n            onChange={update}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import { apiUpdateIndex } from \"../backendAPIs/fetchAPI\";\n\nconst directionFinder = (direction, currentIndex) => {\n  let result = null;\n  direction === \"forwards\"\n    ? (result = currentIndex + 1)\n    : (result = currentIndex - 1);\n  if (result < 0) {\n    result = 0;\n  }\n  return result;\n};\n\nconst movePedalboard = (self, direction, pedalboards, setPedalboards) => {\n  const currentIndex = pedalboards.indexOf(self);\n  const destination = directionFinder(direction, currentIndex);\n  const tempBoards = [...pedalboards];\n  const tempSelf = tempBoards.splice(currentIndex, 1)[0];\n  tempBoards.splice(destination, 0, tempSelf);\n  setPedalboards(\n    tempBoards.map((pedalboard) => {\n      pedalboard.index = tempBoards.indexOf(pedalboard);\n      return pedalboard;\n    })\n  );\n  pedalboards.forEach((pedalboard) => apiUpdateIndex(pedalboard));\n};\n\nconst movePedal = (self, direction, activeBoard, setActiveBoard) => {\n  const currentIndex = activeBoard.pedals.indexOf(self);\n  const destination = directionFinder(direction, currentIndex);\n  const tempPedals = [...activeBoard.pedals];\n  const tempSelf = tempPedals.splice(currentIndex, 1)[0];\n  tempPedals.splice(destination, 0, tempSelf);\n  tempPedals.map((pedal) => {\n    pedal.index = tempPedals.indexOf(pedal);\n    return pedal;\n  });\n  const tempBoard = activeBoard;\n  tempBoard.pedals = tempPedals;\n  setActiveBoard({ ...tempBoard }); // spread into new obj to force re-render\n  activeBoard.pedals.forEach((pedal) => apiUpdateIndex(pedal));\n};\n\nconst moveControl = (self, direction, openPedal, setOpenPedal) => {\n  const currentIndex = openPedal.controls.indexOf(self);\n  const destination = directionFinder(direction, currentIndex);\n  const tempControls = [...openPedal.controls];\n  const tempSelf = tempControls.splice(currentIndex, 1)[0];\n  tempControls.splice(destination, 0, tempSelf);\n  tempControls.map((control) => {\n    control.index = tempControls.indexOf(control);\n    return control;\n  });\n  const tempPedal = openPedal;\n  tempPedal.controls = tempControls;\n  setOpenPedal({ ...tempPedal }); // spread into new obj to force re-render\n  openPedal.controls.forEach((control) => apiUpdateIndex(control));\n};\n\nexport { movePedalboard, movePedal, moveControl };\n","import \"../styles/Move.css\";\nimport { useContext } from \"react\";\nimport { BoardContext } from \"./Menu\";\nimport {\n  movePedalboard,\n  movePedal,\n  moveControl,\n} from \"../utility/frontendAPIs/updateIndexAPI\";\n\nfunction Move(props) {\n  const { feType, self } = props;\n  const {\n    pedalboards,\n    setPedalboards,\n    activeBoard,\n    setActiveBoard,\n    openPedal,\n    setOpenPedal,\n  } = useContext(BoardContext);\n\n  const moveIndex = (direction) => {\n    switch (feType) {\n      case \"pedalboard\":\n        movePedalboard(\n          self,\n          direction,\n          pedalboards,\n          setPedalboards,\n          setActiveBoard\n        );\n        break;\n      case \"pedal\":\n        movePedal(self, direction, activeBoard, setActiveBoard, setOpenPedal);\n        break;\n      case \"flicker\":\n        moveControl(self, direction, openPedal, setOpenPedal);\n        break;\n      case \"knob\":\n        moveControl(self, direction, openPedal, setOpenPedal);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"Move\">\n      <button onClick={() => moveIndex(\"backwards\")}>&#171;</button>\n      <button onClick={() => moveIndex(\"forwards\")}>&#187;</button>\n    </div>\n  );\n}\n\nexport default Move;\n","import { apiUpdateIndex, apiDelete } from \"../backendAPIs/fetchAPI\";\n\nconst deletePedalboard = (\n  self,\n  pedalboards,\n  setPedalboards,\n  setActiveBoard\n) => {\n  const tempBoards = pedalboards.filter((item) => item._id !== self._id);\n  setPedalboards(\n    tempBoards.map((pedalboard) => {\n      pedalboard.index = tempBoards.indexOf(pedalboard);\n      return pedalboard;\n    })\n  );\n  setActiveBoard(null);\n  apiDelete(self);\n  pedalboards.forEach((pedalboard) => apiUpdateIndex(pedalboard));\n};\n\nconst deletePedal = (\n  self,\n  activeBoard,\n  setActiveBoard,\n  openPedal,\n  setOpenPedal\n) => {\n  const tempBoard = activeBoard;\n  const tempPedals = activeBoard.pedals.filter((item) => item._id !== self._id);\n  tempPedals.map((pedal) => {\n    pedal.index = tempPedals.indexOf(pedal);\n    return pedal;\n  });\n  tempBoard.pedals = tempPedals;\n  setActiveBoard({ ...tempBoard }); // spread into new obj to force re-render\n  if (openPedal !== null && openPedal !== undefined)\n    setOpenPedal(activeBoard.pedals[0]); // sets new openPedal if pedals are the parent (in SideList)\n  apiDelete(self);\n  activeBoard.pedals.forEach((pedal) => apiUpdateIndex(pedal));\n};\n\nconst deleteControl = (self, openPedal, setOpenPedal) => {\n  const tempPedal = openPedal;\n  const tempControls = tempPedal.controls.filter(\n    (item) => item._id !== self._id\n  );\n  tempControls.map((control) => {\n    control.index = tempControls.indexOf(control);\n    return control;\n  });\n  tempPedal.controls = tempControls;\n  setOpenPedal({ ...tempPedal }); // spread into new obj to force re-render\n  apiDelete(self);\n  openPedal.controls.forEach((control) => apiUpdateIndex(control));\n};\n\nexport { deletePedalboard, deletePedal, deleteControl };\n","import { useContext } from \"react\";\nimport { BoardContext } from \"./Menu\";\nimport {\n  deletePedalboard,\n  deletePedal,\n  deleteControl,\n} from \"../utility/frontendAPIs/deletionAPI\";\n\nfunction Delete(props) {\n  const { feType, self } = props;\n  const {\n    pedalboards,\n    setPedalboards,\n    activeBoard,\n    setActiveBoard,\n    openPedal,\n    setOpenPedal,\n    tonelocked,\n  } = useContext(BoardContext);\n\n  return (\n    <button\n      className={`delete ${tonelocked ? \"hide-delete\" : \"\"}`}\n      onClick={() => {\n        switch (feType) {\n          case \"pedalboard\":\n            deletePedalboard(self, pedalboards, setPedalboards, setActiveBoard);\n            break;\n          case \"pedal\":\n            deletePedal(\n              self,\n              activeBoard,\n              setActiveBoard,\n              openPedal,\n              setOpenPedal\n            );\n            break;\n          case \"flicker\":\n            deleteControl(self, openPedal, setOpenPedal);\n            break;\n          case \"knob\":\n            deleteControl(self, openPedal, setOpenPedal);\n            break;\n          default:\n            break;\n        }\n      }}\n    >\n      Delete\n    </button>\n  );\n}\n\nexport default Delete;\n","import { apiUpdateValue } from \"../backendAPIs/fetchAPI\";\n\nconst updateValueAPI = (value, self, openPedal, setOpenPedal) => {\n    const tempPedal = openPedal;\n        tempPedal.controls.forEach((control) => {\n          if (control._id === self._id) {\n            control.value = value;\n            apiUpdateValue(control);\n          }\n        });\n        setOpenPedal(tempPedal);\n};\n\nexport { updateValueAPI };\n","import \"../styles/Card.css\";\nimport \"../styles/Flicker.css\";\nimport { useState, useEffect, useRef, useContext } from \"react\";\nimport { BoardContext } from \"./Menu\";\nimport { Basic } from \"react-dial-knob\";\nimport Input from \"./Input\";\nimport Move from \"./Move\";\nimport Delete from \"./Delete\";\nimport { nameChangeAPI } from \"../utility/frontendAPIs/nameChangeAPI\";\nimport { updateValueAPI } from \"../utility/frontendAPIs/updateValueAPI\";\nimport { flickerPosition } from \"../utility/frontendAPIs/flickerAPI\";\n\nfunction Card(props) {\n  const { feType, self } = props;\n  const {\n    pedalboards,\n    setPedalboards,\n    activeBoard,\n    setActiveBoard,\n    openPedal,\n    setOpenPedal,\n  } = useContext(BoardContext);\n\n  // Name Change\n  const [nameChange, setNameChange] = useState([]);\n\n  useEffect(() => {\n    nameChangeAPI(\n      feType,\n      nameChange,\n      pedalboards,\n      setPedalboards,\n      activeBoard,\n      setActiveBoard,\n      openPedal,\n      setOpenPedal\n    );\n  }, [nameChange]);\n\n  // Flicker\n  const firstPosition = useRef();\n  const secondPosition = useRef();\n  const thirdPosition = useRef();\n\n  // Knob\n  const [value, setValue] = useState(self.value);\n\n  useEffect(() => {\n    if (feType === \"knob\") {\n      updateValueAPI(value, self, openPedal, setOpenPedal);\n    }\n  }, [value]);\n\n  // Knob Diameter Responsiveness\n  const [viewport, setViewport] = useState(window.innerWidth);\n  const breakpoint = 615;\n\n  useEffect(() => {\n    const handleResizeWindow = () => setViewport(window.innerWidth);\n    // subscribe to window resize event \"onComponentDidMount\"\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      // unsubscribe \"onComponentDestroy\"\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, []);\n\n  return (\n    <li className=\"Card-li\">\n      {(() => {\n        switch (feType) {\n          case \"pedalboard\":\n            return (\n              <div className=\"Card\">\n                <div className=\"card-name\">\n                  <Input\n                    type=\"text\"\n                    name=\"Pedalboard Name\"\n                    placeholder=\"Enter a pedalboard name\"\n                    setNameChange={setNameChange}\n                    item={self}\n                  />\n                </div>\n                <div className=\"card-buttons\">\n                  <button\n                    className={`${\n                      activeBoard && activeBoard._id === self._id\n                        ? \"active\"\n                        : null\n                    }`}\n                    onClick={() => setActiveBoard(self)}\n                  >\n                    Make Active\n                  </button>\n                  <Move feType={feType} self={self} />\n                  <Delete feType={feType} self={self} />\n                </div>\n              </div>\n            );\n          case \"pedal\":\n            return (\n              <div className=\"Card\">\n                <div className=\"card-name\">\n                  <Input\n                    type=\"text\"\n                    name=\"Pedal Name\"\n                    placeholder=\"Enter a pedal name\"\n                    setNameChange={setNameChange}\n                    item={self}\n                  />\n                </div>\n                <div className=\"card-buttons\">\n                  <button\n                    className={`${\n                      openPedal && openPedal._id === self._id ? \"active\" : null\n                    }`}\n                    onClick={() => setOpenPedal(self)}\n                  >\n                    Open\n                  </button>\n                  <Move feType={feType} self={self} />\n                  <Delete feType={feType} self={self} />\n                </div>\n              </div>\n            );\n          case \"flicker\":\n            return (\n              <div className=\"Card\">\n                <div\n                  className=\"Flicker\"\n                  onClick={() =>\n                    flickerPosition(\n                      firstPosition,\n                      secondPosition,\n                      thirdPosition,\n                      self,\n                      openPedal,\n                      setOpenPedal\n                    )\n                  }\n                >\n                  <div\n                    className={`flicker-dot flicker-position-one ${\n                      self.value === 1 ? \"active-flicker-position\" : null\n                    }`}\n                    ref={firstPosition}\n                  ></div>\n                  <div\n                    className={`flicker-dot flicker-position-two ${\n                      self.value === 2 ? \"active-flicker-position\" : null\n                    }`}\n                    ref={secondPosition}\n                  ></div>\n                  <div\n                    className={`flicker-dot flicker-position-three ${\n                      self.value === 3 ? \"active-flicker-position\" : null\n                    }`}\n                    ref={thirdPosition}\n                  ></div>\n                </div>\n                <div className=\"card-name\">\n                  <Input\n                    type=\"text\"\n                    name=\"Switch Name\"\n                    placeholder=\"Enter a switch name\"\n                    setNameChange={setNameChange}\n                    item={self}\n                  />\n                </div>\n                <div className=\"card-buttons\">\n                  <Move feType={feType} self={self} />\n                  <Delete feType={feType} self={self} />\n                </div>\n              </div>\n            );\n          case \"knob\":\n            return (\n              <div className=\"Card\">\n                <Basic\n                  className=\"Knob\"\n                  diameter={viewport > breakpoint ? 100 : 80}\n                  min={0}\n                  max={359}\n                  step={1}\n                  value={value}\n                  theme={{\n                    defaultColor: \"#000\",\n                    activeColor: \"#fada5e\",\n                    gradientStart: \"#bcb499\",\n                    gradientEnd: \"#efd475\",\n                  }}\n                  onValueChange={setValue}\n                ></Basic>\n                <div className=\"card-name\">\n                  <Input\n                    type=\"text\"\n                    name=\"Knob Name\"\n                    placeholder=\"Enter a knob name\"\n                    setNameChange={setNameChange}\n                    item={self}\n                  />\n                </div>\n                <div className=\"card-buttons\">\n                  <Move feType={feType} self={self} />\n                  <Delete feType={feType} self={self} />\n                </div>\n              </div>\n            );\n          default:\n            break;\n        }\n      })()}\n    </li>\n  );\n}\n\nexport default Card;\n","import { apiNameChange } from \"../backendAPIs/fetchAPI\";\n\nconst nameChangeAPI = (\n  feType,\n  nameChange,\n  pedalboards,\n  setPedalboards,\n  activeBoard,\n  setActiveBoard,\n  openPedal,\n  setOpenPedal\n) => {\n  switch (feType) {\n    case \"pedalboard\":\n      const tempPedalboards = pedalboards;\n      tempPedalboards.forEach((pedalboard) => {\n        if (pedalboard._id === nameChange[1]) {\n          pedalboard.name = nameChange[0];\n          apiNameChange(pedalboard);\n        }\n      });\n      setPedalboards(tempPedalboards);\n      break;\n    case \"pedal\":\n      if (activeBoard) {\n        const tempBoard = activeBoard;\n        tempBoard.pedals.forEach((pedal) => {\n          if (pedal._id === nameChange[1]) {\n            pedal.name = nameChange[0];\n            apiNameChange(pedal);\n          }\n        });\n        setActiveBoard(tempBoard);\n      }\n      break;\n    case \"knob\":\n      if (openPedal) {\n        const tempPedal = openPedal;\n        tempPedal.controls.forEach((control) => {\n          if (control._id === nameChange[1]) {\n            control.name = nameChange[0];\n            apiNameChange(control);\n          }\n        });\n        setOpenPedal(tempPedal);\n      }\n      break;\n    case \"flicker\":\n      if (openPedal) {\n        const tempPedal = openPedal;\n        tempPedal.controls.forEach((control) => {\n          if (control._id === nameChange[1]) {\n            control.name = nameChange[0];\n            apiNameChange(control);\n          }\n        });\n        setOpenPedal(tempPedal);\n      }\n      break;\n    default:\n      break;\n  }\n};\n\nexport { nameChangeAPI };\n","import { updateValueAPI } from \"./updateValueAPI\";\n\nconst flickerPosition = (\n  firstPosition,\n  secondPosition,\n  thirdPosition,\n  self,\n  openPedal,\n  setOpenPedal\n) => {\n  if (firstPosition.current.classList.contains(\"active-flicker-position\")) {\n    firstPosition.current.classList.toggle(\"active-flicker-position\");\n    secondPosition.current.classList.toggle(\"active-flicker-position\");\n    updateValueAPI(2, self, openPedal, setOpenPedal);\n  } else if (\n    secondPosition.current.classList.contains(\"active-flicker-position\")\n  ) {\n    secondPosition.current.classList.toggle(\"active-flicker-position\");\n    thirdPosition.current.classList.toggle(\"active-flicker-position\");\n    updateValueAPI(3, self, openPedal, setOpenPedal);\n  } else if (\n    thirdPosition.current.classList.contains(\"active-flicker-position\")\n  ) {\n    thirdPosition.current.classList.toggle(\"active-flicker-position\");\n    firstPosition.current.classList.toggle(\"active-flicker-position\");\n    updateValueAPI(1, self, openPedal, setOpenPedal);\n  }\n};\n\nexport { flickerPosition };\n","import \"../styles/SideList.css\";\nimport { useContext } from \"react\";\nimport { BoardContext } from \"./Menu\";\nimport {\n  addNewPedalboard,\n  addNewPedal,\n} from \"../utility/frontendAPIs/creationAPI\";\nimport Card from \"./Card\";\n\nfunction SideList() {\n  const {\n    pedalboards,\n    setPedalboards,\n    activeBoard,\n    setActiveBoard,\n    openPedal,\n    setOpenPedal,\n  } = useContext(BoardContext);\n\n  return (\n    <aside className=\"SideList\">\n      {openPedal ? (\n        <section className=\"SideList-container\">\n          <header className=\"SideList-header\">\n            <button\n              className=\"back-to-pedalboards\"\n              onClick={() => setOpenPedal(null)}\n            >\n              Back to Pedalboards\n            </button>\n            <button\n              className=\"new-pedal\"\n              onClick={() => addNewPedal(activeBoard, setActiveBoard)}\n            >\n              New Pedal\n            </button>\n          </header>\n          <ul className=\"SideList-list\">\n            {activeBoard.pedals.map((pedal, index) => {\n              return (\n                <Card\n                  key={pedal._id}\n                  feType={\"pedal\"}\n                  self={pedal}\n                  index={index}\n                />\n              );\n            })}\n          </ul>\n        </section>\n      ) : (\n        <section className=\"SideList-container\">\n          <header className=\"SideList-header\">\n            <button\n              className=\"new-pedalboard\"\n              onClick={() =>\n                addNewPedalboard(pedalboards, setPedalboards, setActiveBoard)\n              }\n            >\n              New Pedalboard\n            </button>\n          </header>\n          <ul className=\"SideList-list\">\n            {pedalboards.map((pedalboard, index) => {\n              return (\n                <Card\n                  key={pedalboard._id}\n                  feType={\"pedalboard\"}\n                  self={pedalboard}\n                  index={index}\n                />\n              );\n            })}\n          </ul>\n        </section>\n      )}\n    </aside>\n  );\n}\n\nexport default SideList;\n","import \"../styles/OpenBody.css\";\nimport { useContext } from \"react\";\nimport { BoardContext } from \"./Menu\";\nimport {\n  addNewPedal,\n  addNewFlicker,\n  addNewKnob,\n} from \"../utility/frontendAPIs/creationAPI\";\nimport Card from \"./Card\";\n\nfunction OpenBody() {\n  const { activeBoard, setActiveBoard, openPedal, setOpenPedal } =\n    useContext(BoardContext);\n\n  return (\n    <section className=\"OpenBody\">\n      {openPedal ? (\n        <section className=\"OpenBody-container\">\n          <header className=\"OpenBody-header\">\n            <button\n              className=\"new-flicker\"\n              onClick={() => addNewFlicker(openPedal, setOpenPedal)}\n            >\n              New Switch\n            </button>\n            <button\n              className=\"new-knob\"\n              onClick={() => addNewKnob(openPedal, setOpenPedal)}\n            >\n              New Knob\n            </button>\n          </header>\n          <ul className=\"OpenBody-list\">\n            {openPedal.controls.map((control, index) => {\n              if (control.feType === \"flicker\") {\n                return (\n                  <Card\n                    key={control._id}\n                    feType={\"flicker\"}\n                    self={control}\n                    index={index}\n                  />\n                );\n              } else if (control.feType === \"knob\") {\n                return (\n                  <Card\n                    key={control._id}\n                    feType={\"knob\"}\n                    self={control}\n                    index={index}\n                  />\n                );\n              }\n            })}\n          </ul>\n        </section>\n      ) : (\n        <section className=\"OpenBody-container\">\n          {activeBoard ? (\n            <section className=\"ActiveBoard\">\n              <header className=\"OpenBody-header\">\n                <button\n                  className=\"new-pedal\"\n                  onClick={() => addNewPedal(activeBoard, setActiveBoard)}\n                >\n                  New Pedal\n                </button>\n              </header>\n              <ul className=\"OpenBody-list\">\n                {activeBoard.pedals.map((pedal, index) => {\n                  return (\n                    <Card\n                      key={pedal._id}\n                      feType={\"pedal\"}\n                      self={pedal}\n                      index={index}\n                    />\n                  );\n                })}\n              </ul>\n            </section>\n          ) : (\n            <div className=\"No-ActiveBoard\">\n              Please Create or Select a Pedalboard\n            </div>\n          )}\n        </section>\n      )}\n    </section>\n  );\n}\n\nexport default OpenBody;\n","import {\n  PedalboardClass,\n  PedalClass,\n  FlickerClass,\n  KnobClass,\n} from \"../dataClasses\";\nimport { apiGet, apiGetChild } from \"../backendAPIs/fetchAPI\";\n\nconst fetchPedalboardsFromDB = async (user) => {\n  const dbPedalboards = await apiGet(\"pedalboard\", user);\n  // Convert db row into frontend pedalboard class\n  const newDBPedalboards = await dbPedalboards.map((pedalboard) => {\n    const tempBoard = new PedalboardClass();\n    tempBoard._id = pedalboard._id;\n    tempBoard.name = pedalboard.name;\n    tempBoard.index = pedalboard.index;\n    return tempBoard;\n  });\n  // Sort newDBPedalboards by their index in pedalboards\n  newDBPedalboards.sort((a, b) => {\n    return a.index - b.index;\n  });\n  return newDBPedalboards;\n};\n\nconst fetchPedalsFromDB = async (pedalboard, user) => {\n  const dbPedals = await apiGetChild(\"pedal\", pedalboard, user);\n  // Convert db row into frontend pedal class\n  const newDBPedals = await dbPedals.map((pedal) => {\n    const tempPedal = new PedalClass();\n    tempPedal._id = pedal._id;\n    tempPedal.name = pedal.name;\n    tempPedal.index = pedal.index;\n    return tempPedal;\n  });\n  // Sort newDBPedals by their index in pedals\n  newDBPedals.sort((a, b) => {\n    return a.index - b.index;\n  });\n  return newDBPedals;\n};\n\nconst fetchControlsFromDB = async (pedal, user) => {\n  const dbControls = await apiGetChild(\"control\", pedal, user);\n  // Convert db row into frontend pedal class\n  const newDBControls = await dbControls.map((control) => {\n    let tempControl = null;\n    control.type === \"flicker\"\n      ? (tempControl = new FlickerClass())\n      : (tempControl = new KnobClass());\n    tempControl._id = control._id;\n    tempControl.name = control.name;\n    tempControl.value = control.value;\n    tempControl.index = control.index;\n    return tempControl;\n  });\n  // Sort newDBControls by their index in controls\n  newDBControls.sort((a, b) => {\n    return a.index - b.index;\n  });\n  return newDBControls;\n};\n\n// Start App - GET\nconst startAppGET = async (setPedalboards) => {\n  const boards = await fetchPedalboardsFromDB();\n  await boards.forEach(async (board) => {\n    const pedals = await fetchPedalsFromDB(board._id);\n    await pedals.forEach(async (pedal) => {\n      const controls = await fetchControlsFromDB(pedal._id);\n      pedal.controls = controls;\n    });\n    board.pedals = pedals;\n  });\n  setPedalboards(boards);\n};\n\nexport { startAppGET };\n","import \"../styles/Menu.css\";\nimport { useState, useRef, useEffect, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport About from \"./About\";\nimport ToneLock from \"./ToneLock\";\nimport SideList from \"./SideList\";\nimport OpenBody from \"./OpenBody\";\nimport { startAppGET } from \"../utility/frontendAPIs/startAppFetch\";\nexport const BoardContext = createContext();\n\nfunction Menu() {\n  const author = useRef(null);\n  const title = useRef(null);\n  const [pedalboards, setPedalboards] = useState([]);\n  const [activeBoard, setActiveBoard] = useState(null);\n  const [openPedal, setOpenPedal] = useState(null);\n  const [tonelocked, setTonelocked] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    startAppGET(setPedalboards);\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"tone-token-user\");\n    navigate(\"/\");\n  };\n\n  return (\n    <BoardContext.Provider\n      value={{\n        pedalboards,\n        setPedalboards,\n        activeBoard,\n        setActiveBoard,\n        openPedal,\n        setOpenPedal,\n        tonelocked,\n        setTonelocked,\n      }}\n    >\n      <main className=\"Menu\">\n        <header className=\"header\">\n          <About author={author} title={title} />\n          <div>\n            <h2 ref={author} className=\"author\">\n              TJDRZ's\n            </h2>\n            <h1 ref={title} className=\"title\">\n              Tone Token\n            </h1>\n            <button onClick={logout}>Log Out</button>\n          </div>\n          <ToneLock />\n        </header>\n        <SideList />\n        <OpenBody />\n      </main>\n    </BoardContext.Provider>\n  );\n}\n\nexport default Menu;\n","import \"../styles/Login.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  registerUser,\n  loginUser,\n  getUser,\n} from \"../utility/backendAPIs/authAPI\";\nimport About from \"./About\";\n\nfunction Login() {\n  const author = useRef(null);\n  const title = useRef(null);\n  const [newUser, setNewUser] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"tone-token-user\");\n    if (user !== null) {\n      const fetchUserData = async () => {\n        const data = await getUser(user);\n        if (data._id) {\n          navigate(\"/menu\");\n        }\n      };\n      fetchUserData();\n    }\n  }, []);\n\n  const toggleLogin = () => {\n    setNewUser(!newUser);\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    const res = newUser\n      ? await registerUser(email, password)\n      : await loginUser(email, password);\n    if (res.token) {\n      navigate(\"/menu\");\n    } else alert(res.error);\n  };\n\n  return (\n    <main className=\"Login\">\n      <header className=\"header\">\n        <About author={author} title={title} />\n        <div>\n          <h2 ref={author} className=\"author\">\n            TJDRZ's\n          </h2>\n          <h1 ref={title} className=\"title\">\n            Tone Token\n          </h1>\n        </div>\n        <div\n          className=\"ToneLock\"\n          onClick={() => alert(\"https://github.com/TJDRZ\")}\n        >\n          <div className=\"outer-lock\">\n            <div className=\"inner-lock\"></div>\n          </div>\n        </div>\n      </header>\n      <section>\n        <form className=\"Card\" onSubmit={(e) => submitForm(e)}>\n          <button\n            className=\"toggle-login\"\n            type=\"button\"\n            onClick={toggleLogin}\n          >\n            {newUser\n              ? \"Returning User? - Sign-In\"\n              : \"New User? - Create Account\"}\n          </button>\n          <h1>{newUser ? \"Create Account:\" : \"Sign-In:\"}</h1>\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n}\n\nexport default Login;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/menu\" element={<Menu />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import \"./styles/reset.css\";\nimport \"./styles/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}